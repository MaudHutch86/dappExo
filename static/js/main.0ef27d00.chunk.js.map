{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/buttonList.jsx","components/VoterButtonList.jsx","components/main.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","ButtonList","useState","inputValue","setInputValue","WorkflowStatusChange","event","log","VoterRegistered","methods","getVoter","returnValues","call","from","voterRegistered","startRegistration","startProposalsRegistering","send","endRegistration","endProposalsRegistering","startVotingSession","endVotingSession","write","target","tagName","alert","newValue","addVoter","className","id","placeholder","onChange","onClick","VoterButtonList","proposalId","setVoting","ProposalRegistered","getOneProposal","proposalRegistered","writeProposal","addProposal","ProposalVoting","proposalIndex","parseInt","setVote","Main","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0ef27d00.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import { useState, useEffect} from \"react\";\nimport useEth from \"../contexts/EthContext/useEth\";\n\nfunction ButtonList() {\n  const { state: { contract, accounts } } = useEth();\n  const [inputValue, setInputValue] = useState(\"\");\n  // const [votersList, setVotersList] = useState ([]);\n  \n\n  useEffect(() => {\n    contract?.events.WorkflowStatusChange({}, (error, event) => {\n      console.log(event);\n    })\n    \n    \n    contract?.events.VoterRegistered()\n    .on(\"data\", async (event) => {\n      const voterRegistered= await contract.methods.getVoter(event.returnValues).call({from : accounts[0]});\n      console.log(voterRegistered);\n      //setProposalsList( proposalsList => event.returnValues.proposalId)  ;\n      //console.log(ProposalList)\n    })\n    // eslint-disable-next-line\n    \n  }, [contract]);\n \n  const handleInputChange = e => {\n    \n      setInputValue(e.target.value);\n    \n  };\n\n  // handle the button click to start the proposal registration\n\n  const startRegistration = async () => {\n    await contract.methods.startProposalsRegistering().send({ from: accounts[0] });\n    \n  };\n\n  // handle the button click to end the proposal registration\n\n  const endRegistration = async () => {\n   await contract.methods.endProposalsRegistering().send({ from: accounts[0] });\n    \n  };\n\n  // handle the button click to start the voting session\n\n\n  const startVotingSession = async () => {\n     await contract.methods.startVotingSession().send({ from: accounts[0] });\n  \n  };\n\n // handle the button click to end the voting session\n\n  const endVotingSession = async () => {\n     await contract.methods.endVotingSession().send({ from: accounts[0] });\n    \n  };\n\n  const write = async e => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    if (inputValue === \"\") {\n      alert(\"Please add the voter address.\");\n      return;\n    }\n    const newValue = inputValue;\n    \n\n    await contract.methods.addVoter(newValue).send({ from: accounts[0] });\n  };\n\n  \n\n    return (\n        <div className=\"btn-group\">\n       \n        <input\n          id=\"addInput\"\n          type=\"text\"\n          placeholder=\"Add voter address\"\n          value={inputValue}\n          onChange={handleInputChange}></input>\n        <button id=\"addButton\" onClick={write}> Add Voter to white list </button>\n        <button onClick={startRegistration}> start registering proposal </button>\n        <button onClick={endRegistration}> end registering proposal </button>\n        <button onClick={startVotingSession}> start voting session </button>\n        <button onClick={endVotingSession}> end voting session </button>\n      </div>\n    );\n}\n\nexport default ButtonList;","import { useState, useEffect} from \"react\";\nimport useEth from \"../contexts/EthContext/useEth\";\n\nfunction VoterButtonList() {\n  const { state: { contract, accounts } } = useEth();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [proposalId, setVoting] = useState(0);\n  //const [proposalsList, setProposalsList] = useState([]);\n\n\n  useEffect(() => {\n    contract?.events.WorkflowStatusChange({}, (error, event) => {\n      console.log(event);\n    })\n    \n    contract?.events.ProposalRegistered()\n    .on(\"data\", async (event) => {\n      const proposalRegistered = await contract.methods.getOneProposal(event.returnValues.proposalId).call({from : accounts[0]});\n      console.log(proposalRegistered);\n      //setProposalsList( proposalsList => event.returnValues.proposalId)  ;\n      // console.log(proposalsList)\n    })\n    // eslint-disable-next-line\n   \n  }, [contract]);\n\n  const handleInputChange = e => {\n    \n      setInputValue(e.target.value);\n   \n    \n  };\n\n  const handleVoting = e => {\n    \n    setVoting(e.target.value);\n     \n};\n\n  // handle the button click to start the proposal registration\n\n  const writeProposal = async e => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    if (inputValue === \"\") {\n      alert(\"Please add the voter address.\");\n      return;\n    }\n    const newValue = inputValue;\n    \n     if (contract !== null){\n      await contract.methods.addProposal(newValue).send({ from: accounts[0] });\n     }\n  \n   \n   \n\n  };\n\n  // handle the voting using the index \n\n  const ProposalVoting = async () => {\n    \n  \n    const proposalIndex = parseInt(proposalId);\n    if (contract !== null) {\n    await contract.methods.setVote(proposalIndex).send({ from: accounts[0] });\n   }\n   \n   \n  };\n\n  \n\n\n    return (\n        <div className=\"btn-group\">\n        <input\n          id=\"addInput\"\n          type=\"text\"\n          placeholder=\"Add your proposal\"\n          value={inputValue}\n          onChange={handleInputChange}></input>\n        <button id=\"addButton\" onClick={writeProposal}> Add Proposal </button>\n        <input\n          id=\"addIndex\"\n          type=\"text\"\n          placeholder=\"Select index of the proposal\"\n          value={proposalId}\n          onChange={handleVoting}></input>\n\n        <button onClick={ProposalVoting}> Vote </button>\n       \n       \n      </div>\n    );\n}\n\nexport default VoterButtonList;","import ButtonList from \"./buttonList\";\nimport VoterButtonList from \"./VoterButtonList\";\n\n\nfunction Main (){\n  return(\n\n   <div className=\"mainSection\">\n   <div>\n   <ButtonList></ButtonList>\n   </div>\n   <div>\n   </div>\n    <VoterButtonList></VoterButtonList>\n   </div>\n\n  )\n\n\n}\nexport default Main;","import { EthProvider } from \"./contexts/EthContext\";\nimport \"./App.css\";\nimport Main from \"./components/main\";\n\nfunction App() {\n  return (\n    <EthProvider>\n      <Main/>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}